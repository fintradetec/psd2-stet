/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Transaction (
  resourceId: Option[ResourceId],
  /* Technical incremental identification of the transaction.  */
  entryReference: Option[String],
  transactionAmount: AmountType,
  /* Accounting flow of the transaction - CRDT: Credit type transaction - DBIT: Debit type transaction  */
  creditDebitIndicator: TransactionEnums.CreditDebitIndicator,
  status: TransactionStatus,
  /* Booking date of the transaction on the account */
  bookingDate: Date,
  /* Value date of the transaction on the account */
  valueDate: Option[Date],
  /* Date used for specific purposes:  - for card transaction: date of the transaction - for credit transfer: acquiring date of the transaction - for direct debit: receiving date of the transaction  */
  transactionDate: Option[Date],
  remittanceInformation: UnstructuredRemittanceInformation
) extends ApiModel

object TransactionEnums {

  type CreditDebitIndicator = CreditDebitIndicator.Value
  object CreditDebitIndicator extends Enumeration {
    val CRDT = Value("CRDT")
    val DBIT = Value("DBIT")
  }

}


/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class SupplementaryData (
  /* can only be set by the PISP authentication approaches that are supported by the PISP. The PISP can provide several choices separated by commas.  REDIRECT: the PSU is redirected by the TPP to the ASPSP which processes identification and authentication DECOUPLED: the TPP identifies the PSU and forwards the identification to the ASPSP which processes the authentication through a decoupled device EMBEDDED: the TPP identifies the PSU and forwards the identification to the ASPSP which starts the authentication. The TPP forwards one authentication factor of the PSU (e.g. OTP or response to a challenge)    */
  acceptedAuthenticationApproach: Option[SupplementaryDataEnums.Seq[AcceptedAuthenticationApproach]],
  appliedAuthenticationApproach: Option[AppliedAuthenticationApproach],
  /* can only be set by the PISP Hint given by the merchant and/or the PISP about an SCA exemption context  */
  scaHint: Option[SupplementaryDataEnums.ScaHint],
  /* URL to be used by the ASPSP in order to notify the PISP of the finalisation of the authentication and consent process in REDIRECT and DECOUPLED approach  */
  successfulReportUrl: Option[String],
  /* URL to be used by the ASPSP in order to notify the PISP of the failure of the authentication and consent process in REDIRECT and DECOUPLED approach  If this URL is not provided by the PISP, the ASPSP will use the \"successfulReportUrl\" even in case of failure of the Payment Request processing  */
  unsuccessfulReportUrl: Option[String]
) extends ApiModel

object SupplementaryDataEnums {

  type Seq[AcceptedAuthenticationApproach] = Seq[AcceptedAuthenticationApproach].Value
  type ScaHint = ScaHint.Value
  object Seq[AcceptedAuthenticationApproach] extends Enumeration {
  }

  object ScaHint extends Enumeration {
    val NoScaExemption = Value("noScaExemption")
    val ScaExemption = Value("scaExemption")
  }

}

